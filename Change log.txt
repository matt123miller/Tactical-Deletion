TO DO:

Have enemy vision increase a float until Spotted occurs, begin decreasing when you leave trigger.

Sort out observer

Sort out room prefabs with new door system.

Set door colour based on required key

Rotate cameras with anim

Alarms should play from specific points - Working on it

Diagetic interface, disappears when not needed

12/02/16

Lots of updates recently, currently testing the FSM and trying to rectify olf code design decisions. Also why does the player duck in ANY collider? layermask?
Added the Vision Cone layer so that the players PreventStandingInLowHeadroom method will not occur if the collider is on this layer.

30/12/15

Followed the Unity live training FSM tutorial, will begin implementing those features to AIM soon, don't think GSM needs it.
Changed CCTVDetect to work better, now raycasts after a timer instead of each frame. Also refactored the racasting into a method Look()
Also need to bring in the new SBS health system.

18/10/15

Attempted to make all alarm related updating use Observer pattern, not sure if it works yet.
Created AlarmTannoy for locational alarms.
Hacked apart GSM and added enum states.
All music and sounds going forward will function something like the sound for Doors

All hidden behind a branch for safety.

30/10/15

Seperated the locking and door opening logic into 2 seperate systems, Strategy Pattern fo lyf.
Made a much better CCTV cam prefab.
Next time I need to alter the room prefabs.

25/10/15

Players can now pick up diffrent keys tied to 1 of 4 colours and doors will either open or close depending on the required key.


15/10/15

Added the keycard system, players and enemies can carry keycards and locked doors hopefully respond correctly, will test tomorrow.



17/8/15

This is the most recent build of Tactical Deletion  using Unity 5.2 at the time of writing.

Need to check if all 5.2 stuff has changed properly.

The AI half works and I'm currently working on a pickup inventory system for Passcode Cards found laying around any given level.
One day I'll try moving my AI from a big if() statement into something approaching an FSM model.
